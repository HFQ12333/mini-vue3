{
  "version": 3,
  "sources": ["../src/index.ts", "../src/parse.ts"],
  "sourcesContent": ["export { baseParse } from \"./parse\";\n", "import { NodeTypes } from \"./ast\";\n\nfunction createParseContext(content) {\n  return {\n    line: 1,\n    column: 1,\n    offset: 0,\n    source: content, // \u5C31\u4F1A\u88AB\u4E0D\u505C\u7684\u622A\u53D6\n    originalSource: content, // \u6C38\u8FDC\u4E0D\u4F1A\u53D8\u7684\n  };\n}\n\nfunction getCursor(context) {\n  const { line, column, offset } = context;\n  return { line, column, offset };\n}\n\nfunction isEnd(context) {\n  const s = context.source;\n  return !s;\n}\n\nfunction startsWith(s, key) {\n  return s.startsWith(key);\n}\n\nfunction pushNode(nodes, node) {\n  nodes.push(node);\n}\n\nfunction advanceBy(context, length) {\n  const source = context.source;\n  advancePositionWithMutation(context, source, length);\n  context.source = source.slice(length);\n}\n\nfunction advancePositionWithMutation(context, source, length) {\n  let linesCount = 0;\n  let lastNewPos = -1;\n  for (let i = 0; i < length; i++) {\n    if (source.charCodeAt(i) === 10) {\n      // \u6362\u884C\u7B26\n      linesCount++;\n      lastNewPos = i;\n    }\n  }\n\n  context.line += linesCount; // abcccc\n  context.offset += length;\n  /**\n   * column:\n   *  a\n   *  b\n   *    cccc\n   *\n   */\n  context.column =\n    lastNewPos === -1 ? context.column + length : length - lastNewPos;\n}\n\nfunction getSelection(context, start) {\n  const end = getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset),\n  };\n}\n\nexport function baseParse(content) {\n  const context = createParseContext(content); // \u521B\u5EFA\u597D\u4E86\u4E00\u4E2A\u4E0A\u4E0B\u6587\n  return parseChildren(context);\n}\n\nfunction parseChildren(context) {\n  // node\n  const nodes = [];\n  //\n  while (!isEnd(context)) {\n    // \u89E3\u6790\n    const s = context.source; // \u7528\u6237\u4F20\u5165\u7684\u5B57\u7B26\u4E32\n    let node;\n    if (startsWith(s, \"{{\")) {\n      // {{ <\n      // \u89E3\u6790\u63D2\u503C\u8BED\u6CD5\n      // node = parseFn1\n    } else if (s[0] === \"<\" && /[a-z]/i.test(s[1])) {\n      // <d\n      // node = parseFn2\n    }\n\n    if (!node) {\n      // \u5C31\u5F53\u6210\u6587\u672C\u89E3\u6790\n      node = parseText(context);\n    }\n\n    pushNode(nodes, node);\n  }\n  return nodes;\n}\n\nfunction parseText(context) {\n  // 'abc123 {{e}}<div></div> abc123'\n  const endTokens = [\"<\", \"{{\"];\n  const start = getCursor(context);\n  let endIndex = context.source.length;\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  const content = parseTextData(context, endIndex);\n\n  return {\n    type: NodeTypes.TEXT,\n    content,\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parseTextData(context, length) {\n  const rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n  return rawText;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACEA,WAAS,mBAAmB,SAAS;AACnC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IAClB;AAAA,EACF;AAEA,WAAS,UAAU,SAAS;AAC1B,UAAM,EAAE,MAAM,QAAQ,OAAO,IAAI;AACjC,WAAO,EAAE,MAAM,QAAQ,OAAO;AAAA,EAChC;AAEA,WAAS,MAAM,SAAS;AACtB,UAAM,IAAI,QAAQ;AAClB,WAAO,CAAC;AAAA,EACV;AAEA,WAAS,WAAW,GAAG,KAAK;AAC1B,WAAO,EAAE,WAAW,GAAG;AAAA,EACzB;AAEA,WAAS,SAAS,OAAO,MAAM;AAC7B,UAAM,KAAK,IAAI;AAAA,EACjB;AAEA,WAAS,UAAU,SAAS,QAAQ;AAClC,UAAM,SAAS,QAAQ;AACvB,gCAA4B,SAAS,QAAQ,MAAM;AACnD,YAAQ,SAAS,OAAO,MAAM,MAAM;AAAA,EACtC;AAEA,WAAS,4BAA4B,SAAS,QAAQ,QAAQ;AAC5D,QAAI,aAAa;AACjB,QAAI,aAAa;AACjB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAI,OAAO,WAAW,CAAC,MAAM,IAAI;AAE/B;AACA,qBAAa;AAAA,MACf;AAAA,IACF;AAEA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAQlB,YAAQ,SACN,eAAe,KAAK,QAAQ,SAAS,SAAS,SAAS;AAAA,EAC3D;AAEA,WAAS,aAAa,SAAS,OAAO;AACpC,UAAM,MAAM,UAAU,OAAO;AAC7B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,QAAQ,QAAQ,eAAe,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,IAC/D;AAAA,EACF;AAEO,WAAS,UAAU,SAAS;AACjC,UAAM,UAAU,mBAAmB,OAAO;AAC1C,WAAO,cAAc,OAAO;AAAA,EAC9B;AAEA,WAAS,cAAc,SAAS;AAE9B,UAAM,QAAQ,CAAC;AAEf,WAAO,CAAC,MAAM,OAAO,GAAG;AAEtB,YAAM,IAAI,QAAQ;AAClB,UAAI;AACJ,UAAI,WAAW,GAAG,IAAI,GAAG;AAAA,MAIzB,WAAW,EAAE,OAAO,OAAO,SAAS,KAAK,EAAE,EAAE,GAAG;AAAA,MAGhD;AAEA,UAAI,CAAC,MAAM;AAET,eAAO,UAAU,OAAO;AAAA,MAC1B;AAEA,eAAS,OAAO,IAAI;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,SAAS;AAE1B,UAAM,YAAY,CAAC,KAAK,IAAI;AAC5B,UAAM,QAAQ,UAAU,OAAO;AAC/B,QAAI,WAAW,QAAQ,OAAO;AAC9B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,YAAM,QAAQ,QAAQ,OAAO,QAAQ,UAAU,IAAI,CAAC;AACpD,UAAI,UAAU,MAAM,WAAW,OAAO;AACpC,mBAAW;AAAA,MACb;AAAA,IACF;AACA,UAAM,UAAU,cAAc,SAAS,QAAQ;AAE/C,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,KAAK,aAAa,SAAS,KAAK;AAAA,IAClC;AAAA,EACF;AAEA,WAAS,cAAc,SAAS,QAAQ;AACtC,UAAM,UAAU,QAAQ,OAAO,MAAM,GAAG,MAAM;AAC9C,cAAU,SAAS,MAAM;AACzB,WAAO;AAAA,EACT;",
  "names": []
}
